// 方法一：
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode removeElements(ListNode head, int val) {
        ListNode newHead = new ListNode(-1);
        ListNode newTail = newHead;
        while (head != null) {
            if (head.val != val) {
                newTail.next = new ListNode(head.val);
                newTail = newTail.next;
            }
            head = head.next;
        }
        return newHead.next;
    }
}


// 方法二：
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode removeElements(ListNode head, int val) {
        ListNode newHead = new ListNode(-1);
        newHead.next = head;
        ListNode cur = newHead;
        while (cur.next != null) {
            ListNode Next = cur.next.next;
            if (cur.next.val == val) {
                cur.next = Next;
            } else {
                cur = cur.next;
            }
        }
        return newHead.next;
    }
}
